{"ast":null,"code":"var _jsxFileName = \"/Users/marcelachuqiyamur/Desktop/ADALAB/EVALUACION FINAL 3/modulo-3-evaluacion-final-marcelachuqi/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"../stylesheets/style.css\";\nimport getDataFromApi from \"../services/api\";\nimport CartoonList from \"./CartoonList\";\nimport Filter from \"./Filter\";\nimport CartoonDetail from \"./CartoonDetail\";\nimport storage from \"../services/local-storage\";\nimport logo from \"../image/goback.png\";\nimport NotFound from \"./NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [cartoons, setCartoons] = useState(storage.get(\"cartoons\", []));\n  const [cartoonFilter, setCartoonFilter] = useState(storage.get(\"cartoonFilter\", \"\"));\n  const [cartoonStatus, setCartoonStatus] = useState(storage.get(\"cartoonStatus\", \"all\"));\n  useEffect(() => {\n    if (cartoons.length === 0) {\n      getDataFromApi().then(cartoon => {\n        setCartoons(cartoon);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    storage.set(\"cartoons\", cartoons);\n  }, [cartoons]);\n  useEffect(() => {\n    storage.set(\"cartoons\", cartoons);\n    storage.set(\"cartoonFilter\", cartoonFilter);\n  }, [cartoons, cartoonFilter]);\n\n  const handleChange = userSearch => {\n    if (userSearch.key === \"name\") {\n      setCartoonFilter(userSearch.value);\n    } else if (userSearch.key === \"status\") {\n      setCartoonStatus(userSearch.value);\n    }\n\n    const filteredCartoon = cartoons.filter(cartoon => {\n      return cartoon.name.toUpperCase().includes(cartoonFilter.toUpperCase());\n    }).filter(cartoon => {\n      if (cartoon.status === \"all\") {\n        return true;\n      } else {\n        return cartoon.status === cartoonStatus;\n      }\n    });\n\n    const handleReset = () => {\n      setCartoonFilter(\"\");\n    };\n\n    const listRender = () => {\n      if (filteredCartoon.length === 0) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [`Upss! Parece que \"`, /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: cartoonFilter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), `\" no existe, intenta con otro personaje`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: handleReset,\n            className: \"go-back-img\",\n            src: logo,\n            alt: \"goback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: handleReset,\n            className: \"cartoon-link-goback\",\n            children: \"\\u2190go Back!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      } else {\n        return /*#__PURE__*/_jsxDEV(CartoonList, {\n          cartoons: filteredCartoon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 16\n        }, this);\n      }\n    };\n\n    const renderCartoonDetail = props => {\n      const RouteCartoonId = parseInt(props.match.params.cartoonId);\n      const findCartoon = cartoons.find(cartoon => {\n        return cartoon.id === RouteCartoonId;\n      });\n\n      if (findCartoon !== undefined) {\n        return /*#__PURE__*/_jsxDEV(CartoonDetail, {\n          cartoon: findCartoon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 16\n        }, this);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: App,\n          children: [/*#__PURE__*/_jsxDEV(Filter, {\n            cartoonFilter: cartoonFilter,\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), listRender()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cartoon/:cartoonId\",\n          render: renderCartoonDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n};\n\n_s(App, \"CtTwuuYZjZKho/UI8Ej3qfgntgM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/marcelachuqiyamur/Desktop/ADALAB/EVALUACION FINAL 3/modulo-3-evaluacion-final-marcelachuqi/src/components/App.js"],"names":["React","useEffect","useState","Route","Switch","getDataFromApi","CartoonList","Filter","CartoonDetail","storage","logo","NotFound","App","props","cartoons","setCartoons","get","cartoonFilter","setCartoonFilter","cartoonStatus","setCartoonStatus","length","then","cartoon","set","handleChange","userSearch","key","value","filteredCartoon","filter","name","toUpperCase","includes","status","handleReset","listRender","renderCartoonDetail","RouteCartoonId","parseInt","match","params","cartoonId","findCartoon","find","id","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"../stylesheets/style.css\";\nimport getDataFromApi from \"../services/api\";\nimport CartoonList from \"./CartoonList\";\nimport Filter from \"./Filter\";\nimport CartoonDetail from \"./CartoonDetail\";\nimport storage from \"../services/local-storage\";\nimport logo from \"../image/goback.png\";\nimport NotFound from \"./NotFound\";\n\nconst App = (props) => {\n  const [cartoons, setCartoons] = useState(storage.get(\"cartoons\", []));\n  const [cartoonFilter, setCartoonFilter] = useState(\n    storage.get(\"cartoonFilter\", \"\")\n  );\n  const [cartoonStatus, setCartoonStatus] = useState(\n    storage.get(\"cartoonStatus\", \"all\")\n  );\n\n  useEffect(() => {\n    if (cartoons.length === 0) {\n      getDataFromApi().then((cartoon) => {\n        setCartoons(cartoon);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    storage.set(\"cartoons\", cartoons);\n  }, [cartoons]);\n\n  useEffect(() => {\n    storage.set(\"cartoons\", cartoons);\n    storage.set(\"cartoonFilter\", cartoonFilter);\n  }, [cartoons, cartoonFilter]);\n\n  const handleChange = (userSearch) => {\n    if (userSearch.key === \"name\") {\n      setCartoonFilter(userSearch.value);\n    } else if (userSearch.key === \"status\") {\n      setCartoonStatus(userSearch.value);\n    }\n\n    const filteredCartoon = cartoons\n      .filter((cartoon) => {\n        return cartoon.name.toUpperCase().includes(cartoonFilter.toUpperCase());\n      })\n      .filter((cartoon) => {\n        if (cartoon.status === \"all\") {\n          return true;\n        } else {\n          return cartoon.status === cartoonStatus;\n        }\n      });\n\n    const handleReset = () => {\n      setCartoonFilter(\"\");\n    };\n\n    const listRender = () => {\n      if (filteredCartoon.length === 0) {\n        return (\n          <>\n            <p>\n              {`Upss! Parece que \"`}\n              <strong>{cartoonFilter}</strong>\n              {`\" no existe, intenta con otro personaje`}\n            </p>\n\n            <img\n              onClick={handleReset}\n              className=\"go-back-img\"\n              src={logo}\n              alt=\"goback\"\n            />\n            <p onClick={handleReset} className=\"cartoon-link-goback\">\n              ←go Back!\n            </p>\n          </>\n        );\n      } else {\n        return <CartoonList cartoons={filteredCartoon} />;\n      }\n    };\n\n    const renderCartoonDetail = (props) => {\n      const RouteCartoonId = parseInt(props.match.params.cartoonId);\n      const findCartoon = cartoons.find((cartoon) => {\n        return cartoon.id === RouteCartoonId;\n      });\n      if (findCartoon !== undefined) {\n        return <CartoonDetail cartoon={findCartoon} />;\n      }\n    };\n\n    return (\n      <>\n        <Switch>\n          <Route exact path=\"/\" component={App}>\n            <Filter cartoonFilter={cartoonFilter} handleChange={handleChange} />\n            {listRender()}\n          </Route>\n          <Route path=\"/cartoon/:cartoonId\" render={renderCartoonDetail} />\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </>\n    );\n  };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}