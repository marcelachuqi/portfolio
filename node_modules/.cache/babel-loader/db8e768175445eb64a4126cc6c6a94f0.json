{"ast":null,"code":"var _jsxFileName = \"/Users/marcelachuqiyamur/Desktop/ADALAB/rick&morty/Rick-Morty/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"../stylesheets/style.css\";\nimport getDataFromApi from \"../services/api\";\nimport CartoonList from \"./CartoonList\";\nimport Filter from \"./Filter\";\nimport CartoonDetail from \"./CartoonDetail\";\nimport storage from \"../services/local-storage\";\nimport logo from \"../image/goback.png\";\nimport NotFound from \"./NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [cartoons, setCartoons] = useState(storage.get(\"cartoons\", []));\n  const [cartoonFilter, setCartoonFilter] = useState(storage.get(\"cartoonFilter\", \"\"));\n  const [cartoonStatus, setCartoonStatus] = useState(\"all\");\n  const [cartoonGender, setCartoonGender] = useState(\"all\");\n  useEffect(() => {\n    if (cartoons.length === 0) {\n      getDataFromApi().then(cartoon => {\n        setCartoons(cartoon);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    storage.set(\"cartoons\", cartoons);\n  }, [cartoons]);\n  useEffect(() => {\n    storage.set(\"cartoonFilter\", cartoonFilter);\n  }, [cartoonFilter]); // useEffect(() => {\n  //   setCartoonGender(cartoonGender);\n  // }, [cartoonGender]);\n  // useEffect(() => {\n  //   setCartoonStatus(cartoonStatus);\n  // }, [cartoonStatus]);\n\n  const handleChange = userSearch => {\n    if (userSearch.key === \"name\") {\n      setCartoonFilter(userSearch.value);\n    } else if (userSearch.key === \"gender\") {\n      setCartoonGender(userSearch.value);\n    } else if (userSearch.key === \"status\") {\n      setCartoonStatus(userSearch.value);\n    }\n  };\n\n  const filteredCartoon = cartoons.filter(cartoon => {\n    return cartoon.name.toUpperCase().includes(cartoonFilter.toUpperCase());\n  }).filter(cartoon => {\n    if (cartoonGender === \"all\") {\n      return true;\n    } else {\n      return cartoon.gender === cartoonGender;\n    }\n  }).filter(cartoon => {\n    if (cartoonStatus === \"all\") {\n      return true;\n    } else {\n      return cartoon.status === cartoonStatus;\n    }\n  });\n  console.log(filteredCartoon);\n\n  const handleReset = () => {\n    setCartoonFilter(\"\");\n  };\n\n  const listRender = () => {\n    if (filteredCartoon.length === 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [`Upss! Parece que \"`, /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: cartoonFilter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), `\" no existe, intenta con otro personaje`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: handleReset,\n          className: \"go-back-img\",\n          src: logo,\n          alt: \"goback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleReset,\n          className: \"cartoon-link-goback\",\n          children: \"\\u2190go Back!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(CartoonList, {\n        cartoons: filteredCartoon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const renderCartoonDetail = props => {\n    const RouteCartoonId = parseInt(props.match.params.cartoonId);\n    const findCartoon = cartoons.find(cartoon => {\n      return cartoon.id === RouteCartoonId;\n    });\n\n    if (findCartoon !== undefined) {\n      return /*#__PURE__*/_jsxDEV(CartoonDetail, {\n        cartoon: findCartoon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: App,\n        children: [/*#__PURE__*/_jsxDEV(Filter, {\n          cartoonFilter: cartoonFilter,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), listRender()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/cartoon/:cartoonId\",\n        render: renderCartoonDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"Ms+gWBg63e6Arsy/Z40YB5LruAs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/marcelachuqiyamur/Desktop/ADALAB/rick&morty/Rick-Morty/src/components/App.js"],"names":["React","useEffect","useState","Route","Switch","getDataFromApi","CartoonList","Filter","CartoonDetail","storage","logo","NotFound","App","props","cartoons","setCartoons","get","cartoonFilter","setCartoonFilter","cartoonStatus","setCartoonStatus","cartoonGender","setCartoonGender","length","then","cartoon","set","handleChange","userSearch","key","value","filteredCartoon","filter","name","toUpperCase","includes","gender","status","console","log","handleReset","listRender","renderCartoonDetail","RouteCartoonId","parseInt","match","params","cartoonId","findCartoon","find","id","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAO,0BAAP;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACO,OAAO,CAACO,GAAR,CAAY,UAAZ,EAAwB,EAAxB,CAAD,CAAxC;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAChDO,OAAO,CAACO,GAAR,CAAY,eAAZ,EAA6B,EAA7B,CADgD,CAAlD;AAGA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,KAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,QAAQ,CAACS,MAAT,KAAoB,CAAxB,EAA2B;AACzBlB,MAAAA,cAAc,GAAGmB,IAAjB,CAAuBC,OAAD,IAAa;AACjCV,QAAAA,WAAW,CAACU,OAAD,CAAX;AACD,OAFD;AAGD;AACF,GANQ,EAMN,EANM,CAAT;AAQAxB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACiB,GAAR,CAAY,UAAZ,EAAwBZ,QAAxB;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACiB,GAAR,CAAY,eAAZ,EAA6BT,aAA7B;AACD,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT,CApBqB,CAwBrB;AACA;AACA;AAEA;AACA;AACA;;AAEA,QAAMU,YAAY,GAAIC,UAAD,IAAgB;AACnC,QAAIA,UAAU,CAACC,GAAX,KAAmB,MAAvB,EAA+B;AAC7BX,MAAAA,gBAAgB,CAACU,UAAU,CAACE,KAAZ,CAAhB;AACD,KAFD,MAEO,IAAIF,UAAU,CAACC,GAAX,KAAmB,QAAvB,EAAiC;AACtCP,MAAAA,gBAAgB,CAACM,UAAU,CAACE,KAAZ,CAAhB;AACD,KAFM,MAEA,IAAIF,UAAU,CAACC,GAAX,KAAmB,QAAvB,EAAiC;AACtCT,MAAAA,gBAAgB,CAACQ,UAAU,CAACE,KAAZ,CAAhB;AACD;AACF,GARD;;AAUA,QAAMC,eAAe,GAAGjB,QAAQ,CAC7BkB,MADqB,CACbP,OAAD,IAAa;AACnB,WAAOA,OAAO,CAACQ,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoClB,aAAa,CAACiB,WAAd,EAApC,CAAP;AACD,GAHqB,EAIrBF,MAJqB,CAIbP,OAAD,IAAa;AACnB,QAAIJ,aAAa,KAAK,KAAtB,EAA6B;AAC3B,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAOI,OAAO,CAACW,MAAR,KAAmBf,aAA1B;AACD;AACF,GAVqB,EAWrBW,MAXqB,CAWbP,OAAD,IAAa;AACnB,QAAIN,aAAa,KAAK,KAAtB,EAA6B;AAC3B,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAOM,OAAO,CAACY,MAAR,KAAmBlB,aAA1B;AACD;AACF,GAjBqB,CAAxB;AAkBAmB,EAAAA,OAAO,CAACC,GAAR,CAAYR,eAAZ;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACxBtB,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GAFD;;AAIA,QAAMuB,UAAU,GAAG,MAAM;AACvB,QAAIV,eAAe,CAACR,MAAhB,KAA2B,CAA/B,EAAkC;AAChC,0BACE;AAAA,gCACE;AAAA,qBACI,oBADJ,eAEE;AAAA,sBAASN;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGI,yCAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,UAAA,OAAO,EAAEuB,WADX;AAEE,UAAA,SAAS,EAAC,aAFZ;AAGE,UAAA,GAAG,EAAE9B,IAHP;AAIE,UAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE;AAAG,UAAA,OAAO,EAAE8B,WAAZ;AAAyB,UAAA,SAAS,EAAC,qBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA,sBADF;AAmBD,KApBD,MAoBO;AACL,0BAAO,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAET;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GAxBD;;AA0BA,QAAMW,mBAAmB,GAAI7B,KAAD,IAAW;AACrC,UAAM8B,cAAc,GAAGC,QAAQ,CAAC/B,KAAK,CAACgC,KAAN,CAAYC,MAAZ,CAAmBC,SAApB,CAA/B;AACA,UAAMC,WAAW,GAAGlC,QAAQ,CAACmC,IAAT,CAAexB,OAAD,IAAa;AAC7C,aAAOA,OAAO,CAACyB,EAAR,KAAeP,cAAtB;AACD,KAFmB,CAApB;;AAGA,QAAIK,WAAW,KAAKG,SAApB,EAA+B;AAC7B,0BAAO,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEH;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GARD;;AAUA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEpC,GAAjC;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,aAAa,EAAEK,aAAvB;AAAsC,UAAA,YAAY,EAAEU;AAApD;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGc,UAAU,EAFb;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,qBAAZ;AAAkC,QAAA,MAAM,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,KAAD;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD,CApHD;;GAAM9B,G;;KAAAA,G;AAsHN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"../stylesheets/style.css\";\nimport getDataFromApi from \"../services/api\";\nimport CartoonList from \"./CartoonList\";\nimport Filter from \"./Filter\";\nimport CartoonDetail from \"./CartoonDetail\";\nimport storage from \"../services/local-storage\";\nimport logo from \"../image/goback.png\";\nimport NotFound from \"./NotFound\";\n\nconst App = (props) => {\n  const [cartoons, setCartoons] = useState(storage.get(\"cartoons\", []));\n  const [cartoonFilter, setCartoonFilter] = useState(\n    storage.get(\"cartoonFilter\", \"\")\n  );\n  const [cartoonStatus, setCartoonStatus] = useState(\"all\");\n  const [cartoonGender, setCartoonGender] = useState(\"all\");\n\n  useEffect(() => {\n    if (cartoons.length === 0) {\n      getDataFromApi().then((cartoon) => {\n        setCartoons(cartoon);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    storage.set(\"cartoons\", cartoons);\n  }, [cartoons]);\n\n  useEffect(() => {\n    storage.set(\"cartoonFilter\", cartoonFilter);\n  }, [cartoonFilter]);\n\n  // useEffect(() => {\n  //   setCartoonGender(cartoonGender);\n  // }, [cartoonGender]);\n\n  // useEffect(() => {\n  //   setCartoonStatus(cartoonStatus);\n  // }, [cartoonStatus]);\n\n  const handleChange = (userSearch) => {\n    if (userSearch.key === \"name\") {\n      setCartoonFilter(userSearch.value);\n    } else if (userSearch.key === \"gender\") {\n      setCartoonGender(userSearch.value);\n    } else if (userSearch.key === \"status\") {\n      setCartoonStatus(userSearch.value);\n    }\n  };\n\n  const filteredCartoon = cartoons\n    .filter((cartoon) => {\n      return cartoon.name.toUpperCase().includes(cartoonFilter.toUpperCase());\n    })\n    .filter((cartoon) => {\n      if (cartoonGender === \"all\") {\n        return true;\n      } else {\n        return cartoon.gender === cartoonGender;\n      }\n    })\n    .filter((cartoon) => {\n      if (cartoonStatus === \"all\") {\n        return true;\n      } else {\n        return cartoon.status === cartoonStatus;\n      }\n    });\n  console.log(filteredCartoon);\n\n  const handleReset = () => {\n    setCartoonFilter(\"\");\n  };\n\n  const listRender = () => {\n    if (filteredCartoon.length === 0) {\n      return (\n        <>\n          <p>\n            {`Upss! Parece que \"`}\n            <strong>{cartoonFilter}</strong>\n            {`\" no existe, intenta con otro personaje`}\n          </p>\n\n          <img\n            onClick={handleReset}\n            className=\"go-back-img\"\n            src={logo}\n            alt=\"goback\"\n          />\n          <p onClick={handleReset} className=\"cartoon-link-goback\">\n            ←go Back!\n          </p>\n        </>\n      );\n    } else {\n      return <CartoonList cartoons={filteredCartoon} />;\n    }\n  };\n\n  const renderCartoonDetail = (props) => {\n    const RouteCartoonId = parseInt(props.match.params.cartoonId);\n    const findCartoon = cartoons.find((cartoon) => {\n      return cartoon.id === RouteCartoonId;\n    });\n    if (findCartoon !== undefined) {\n      return <CartoonDetail cartoon={findCartoon} />;\n    }\n  };\n\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" component={App}>\n          <Filter cartoonFilter={cartoonFilter} handleChange={handleChange} />\n          {listRender()}\n        </Route>\n        <Route path=\"/cartoon/:cartoonId\" render={renderCartoonDetail} />\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}